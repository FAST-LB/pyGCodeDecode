[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["pyGCodeDecode"]

[tool.setuptools.package-data]
"pyGCodeDecode" = ["data/*"]

[project]
name = "pyGCodeDecode"
version = "0.2.1"
authors = [
    { name = "FAST-LB at KIT", email = "lt-github@fast.kit.edu" },
    { name = "Jonathan Knirsch", email = "jonathan.knirsch@student.kit.edu" },
    { name = "Felix FrÃ¶lich", email = "felix.froelich@kit.edu" },
    { name = "Lukas Hof", email = "lukas.hof@kit.edu" },
]
description = "Generate time dependent boundary conditions from a .gcode file."
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9"
dependencies = ["numpy", "matplotlib", "PyYAML", "pyvista"]

[project.optional-dependencies]
TEST = ["pytest-cov"]
DEVELOPER = [
    "flake8",
    "isort",
    "black[jupyter]",
    "flake8-docstrings",
    "pre-commit",
    "pytest-cov",
]

[project.urls]
Code = "https://github.com/FAST-LB/pyGCodeDecode"
Issues = "https://github.com/FAST-LB/pyGCodeDecode/issues"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.coverage.paths]
source = ["./pyGCodeDecode/"]

[tool.coverage.run]
omit = ["./tests/*", "./example/*"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = ["if __name__ == .__main__.:", "except", "import"]

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["."]

[tool.pydoc-markdown.renderer]
type = "mkdocs"

[[tool.pydoc-markdown.renderer.pages]]
title = "API Documentation"
name = "index"
contents = ["pyGCodeDecode.*"]
